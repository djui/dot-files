=== Vim Erlang plugin ===

Vim plugin for the programming language Erlang. The next features
are implemented:
	- Syntax highlight
	- Code folding
	- Code completion (based on Mod:module_info/0 to use the
			   Erlang introspection mechanism)
	- Auto-indent
	- QuickFix


== Installation ==

* Unix
	- For local installation (one user only) copy the content of the
	  tarball to your ~/.vim directory
	- For global installation copy the content of the tarball to
	  your vim runtime directory (e.g. /usr/share/vim/vimX/)


== Omni completion ==

Write the name of a module (e.g. `my_mod:') presh CTRL-X CTRL-O to activate
the omni completion. The omni completion try to use the man pages to give
the definition for the standard functions. The omni completion try to compile
local modules, if it is possible, in order to call their Mod:module_info/0.

The program `escript' is required, the standard Erlang installation
comes with it.


== Settings ==

You can set various variables in your vimrc file to make the plugin behave
differently.

Syntax options:
The options expect a 0 value for disabling and a non-zero (e.g. 1) for enabling.

* Highlight all Erlang bifs as keywords: (default: 0)
	g:erlangHighlightBif 

Folding options:
The options expect a 0 value for disabling and a non-zero (e.g. 1) for enabling.

* Enable/disable folding: (default: 0)
	g:erlangFold
* Splitting functions if a new function head appears: (default: 0)
	g:erlangFoldSplitFunction

Completion options:
The options expect a string with the path or an integer value like before.

* Set the location of the Erlang man pages: (default: "/usr/lib/erlang/man")
	g:erlangManPath
* Enable/disable using Erlang man pages in the code completion: (default: 1)
	g:erlangCompletionDisplayDoc

More completion options:
The options expect a string as below is explained.

* Set the `grep' command to be use when scanning the man pages: (default: "grep")
	g:erlangCompletionGrep
* Set the suffix of the man page names: (default: "")
	g:erlangManSuffix

	- On Ubuntu, Erlang man pages are placed like this:
		/ERLANG/PATH/man/man3/lists.3erl.gz

		** So, you must set:
			let g:erlangCompletionGrep='zgrep'
			let g:erlangManSuffix='erl\.gz'

	- In another systems, Erlang man pages are placed like this:
		/ERLANG/PATH/man/man3/lists.3

		** In this case, use the default options value **
